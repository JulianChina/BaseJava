package EffectiveJava3rd.iGeneralProgramming;

//61 基本数据类型优于包装类
public class I61 {
    //Java有一个由两部分组成的类型系统，包括基本类型和引用类型。每个基本类型都有一个对应的引用类型，称为包装类型。
    //将 == 操作符应用于包装类型几乎都是错误的。
    //在操作中混合使用基本类型和包装类型时，包装类型就会自动拆箱，这种情况无一例外。

    //不能将基本类型放在集合中，因此必须使用包装类型。
    //在参数化类型和方法中，必须使用包装类型作为类型参数，因为Java不允许使用基本类型。
    //在进行反射方法调用时，必须使用包装类型。

    //只要有选择，就应该优先使用基本类型，而不是包装类型。
    //自动装箱减少了使用包装类型的冗长，但没有减少危险。
    //当你的程序执行包含包装类型和基本类型的混合类型计算时，它将进行拆箱，当你的程序执行拆箱时，有可能抛出NullPointerException。
    //当你的程序将基本类型装箱时，可能会导致代价高昂且不必要的对象创建。
}
