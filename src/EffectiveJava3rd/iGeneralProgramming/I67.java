package EffectiveJava3rd.iGeneralProgramming;

//67 明智审慎地进行优化
public class I67 {
    //有三条关于优化的格言是每个人都应该知道的：
    // 比起其他任何单一的原因(包括盲目的愚蠢)，很多计算上的过失都被归昝于效率(不一定能实现)。
    // 不要去计较效率上的一些小小的得失，在97%的情况下，不成熟的优化才是一切问题的根源。
    // 在优化方面，我们应该遵守两条规则：
    //  规则1：不要进行优化。
    //  规则2(仅针对专家)：还是不要进行优化，也就是说，在你还没有绝对清晰的未优化方案之前，请不要进行优化。

    //不要为了性能而牺牲合理的架构。努力编写好的程序，而不是快速的程序。
    //尽量避免限制性能的设计决策。
    //考虑API设计决策的性能结果。
    //为了获得良好的性能而改变API是一个非常糟糕的想法。
    //在每次尝 试优化之前和之后测量性能。

    //不要努力写快的程序，要努力写好程序；速度自然会提高。
    //在设计系统时一定要考虑性能，特别是在设计API、线路层协议和持久数据格式时。
    //检查算法的选择：再多的底层优化也不能弥补算法选择的不足。
}
