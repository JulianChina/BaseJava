package EffectiveJava3rd.jExceptions;

//70 对可恢复的情况使用受检异常，对编程错误使用运行时异常
public class J70 {
    //Java程序设计语言提供了三种throwable：受检异常(checked exceptions)、运行时异常(runtime exceptions)和错误(errors)。
    //在决定使用受检异常还是非受检异常时，主要的原则是：如果期望调用者能够合理的恢复程序运行，对于这种情况就应该使用受检异常。
    //有两种非受检的throwable：运行时异常和错误。在行为上两者是等同的：它们都是不需要也不应该被捕获的throwable。
    //如果程序抛出非受检异常或者错误，往往属于不可恢复的情形，程序继续执行下去有害无益。
    //用运行时异常来表明编程错误。
    //你实现的所有非受检的throwable都应该是RuntimeException的子类(直接或者间接的)。不仅不应该定义Error的子类，也不应该抛出AssertionError异常。

    //对于可恢复的情况，要抛出受检异常；对于程序错误，就要抛出运行时异常。不确定是否可恢复，就抛出为受检异常。
    //不要定义任何既不是受检异常也不是运行异常的抛出类型。要在受检异常上提供方法，以便协助程序恢复。
}
