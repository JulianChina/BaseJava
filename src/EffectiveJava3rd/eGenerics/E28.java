package EffectiveJava3rd.eGenerics;

//28 列表优于数组
public class E28 {
    //数组在两个重要方面与泛型不同。
    //首先，数组是协变的(covariant)，如果Sub是Super的子类型，则数组类型Sub[]是数组类型Super[]的子类型。泛型是不变的(invariant)，对于任何两种不同的类型Type1和Type2，List<Type1>既不是List<Type2>的子类型也不是父类型。
    //其次，数组被具体化了(reified)。

    //创建泛型类型的数组，参数化类型的数组，以及类型参数的数组都是非法的。因此，这些数组创建表达式都不合法: new List<E>[]，new List<String>[]，new E[]。
    //类型E，List<E>和List<String>等在技术上被称为不可具体化的类型(nonreifiable types)。不可具体化的类型是其运行时表示包含的信息少于其编译时表示的类型。
    //由于擦除，可唯一确定的参数化类型是无限定通配符类型，如List<?>和Map<?, ?>(条目26)。尽管很少有用，创建无限定通配符类型的数组是合法的。

    //数组和泛型具有非常不同的类型规则。数组是协变和具体化的；泛型是不变的，类型擦除的。因此，数组提供运行时类型的安全性，但不提供编译时类型的安全性，反之亦然。
}
